{
	"$schema": "https://raw.githubusercontent.com/untrustedmodders/plugify/refs/heads/main/schemas/plugin.schema.json",
	"fileVersion": 1,
	"version": "${PLUGIN_VERSION}",
	"friendlyName": "[Plugify] Permissions Core",
	"description": "Minimalistic permissions core",
	"createdBy": "untrustedmodders",
	"createdByURL": "https://github.com/untrustedmodders/",
	"docsURL": "https://github.com/untrustedmodders/plugify-permissions",
	"downloadURL": "https://github.com/untrustedmodders/plugify-permissions/releases/download/v${PLUGIN_VERSION}/${PLUGIN_PACKAGE}.zip",
	"updateURL": "https://untrustedmodders.github.io/plugify-permissions/plugify-permissions.json",
	"entryPoint": "plugify-permissions",
	"supportedPlatforms": [],
	"languageModule": {
		"name": "cpp"
	},
	"dependencies": [],
	"exportedMethods": [
        {
            "name": "GetGroup",
            "group": "GroupManager",
            "description": "Get a pointer to a group by name.",
            "funcName": "GetGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                }
            ],
            "retType": {
                "type": "ptr64",
                "description": "Pointer to the group, or nullptr if not found."
            }
        },
        {
            "name": "HasPermissionGroup",
            "group": "GroupManager",
            "description": "Check if a group has a specific permission.",
            "funcName": "HasPermissionGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                },
                {
                    "name": "perm",
                    "type": "string",
                    "ref": false,
                    "description": "Permission line."
                }
            ],
            "retType": {
                "type": "int32",
                "enum": {
                    "name": "Access",
                    "values": [
                        {
                            "name": "NotFound",
                            "value": 0
                        },
                        {
                            "name": "Disallow",
                            "value": 1
                        },
                        {
                            "name": "Allow",
                            "value": 2
                        }
                    ]
                },
                "description": "Access::NotFound if user not found, Access::Disallow if denied, Access::Allow if allowed."
            }
        },
        {
            "name": "HasParentGroup",
            "group": "GroupManager",
            "description": "Check if parent_name is a parent group for child_name.",
            "funcName": "HasParentGroup",
            "paramTypes": [
                {
                    "name": "child_name",
                    "type": "string",
                    "ref": false,
                    "description": "Child group name."
                },
                {
                    "name": "parent_name",
                    "type": "string",
                    "ref": false,
                    "description": "Parent group name to check."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if name2 is among parents of child_name, otherwise false."
            }
        },
        {
            "name": "GetPriorityGroup",
            "group": "GroupManager",
            "description": "Get the priority of a group.",
            "funcName": "GetPriorityGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                }
            ],
            "retType": {
                "type": "int32",
                "description": "Group priority, or 0 if not found."
            }
        },
        {
            "name": "AddPermissionGroup",
            "group": "GroupManager",
            "description": "Add a permission to a group.",
            "funcName": "AddPermissionGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                },
                {
                    "name": "perm",
                    "type": "string",
                    "ref": false,
                    "description": "Permission line."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if successful; false if group not found."
            }
        },
        {
            "name": "RemovePermissionGroup",
            "group": "GroupManager",
            "description": "Remove a permission from a group.",
            "funcName": "RemovePermissionGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                },
                {
                    "name": "perm",
                    "type": "string",
                    "ref": false,
                    "description": "Permission line."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if successful; false if group not found."
            }
        },
        {
            "name": "CreateGroup",
            "group": "GroupManager",
            "description": "Create a new group.",
            "funcName": "CreateGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                },
                {
                    "name": "perms",
                    "type": "string[]",
                    "ref": false,
                    "description": "Array of permission lines."
                },
                {
                    "name": "priority",
                    "type": "int32",
                    "ref": false,
                    "description": "Group priority."
                },
                {
                    "name": "parent",
                    "type": "ptr64",
                    "ref": false,
                    "description": "Parent group pointer."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if created; false if group already exists."
            }
        },
        {
            "name": "DeleteGroup",
            "group": "GroupManager",
            "description": "Delete a group.",
            "funcName": "DeleteGroup",
            "paramTypes": [
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if deleted; false if group not found."
            }
        },
        {
            "name": "HasPermission",
            "group": "UserManager",
            "description": "Check if a user has a specific permission.",
            "funcName": "HasPermission",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "perm",
                    "type": "string",
                    "ref": false,
                    "description": "Permission line."
                }
            ],
            "retType": {
                "type": "int32",
                "enum": {
                    "name": "Access",
                    "values": [
                        {
                            "name": "NotFound",
                            "value": 0
                        },
                        {
                            "name": "Disallow",
                            "value": 1
                        },
                        {
                            "name": "Allow",
                            "value": 2
                        }
                    ]
                },
                "description": "Access::NotFound if user not found, Access::Disallow if denied, Access::Allow if allowed."
            }
        },
        {
            "name": "HasGroup",
            "group": "UserManager",
            "description": "Check if a user belongs to a specific group (directly or via parent groups).",
            "funcName": "HasGroup",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "group",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if user belongs to the group, false if user or group does not exist or user is not a member."
            }
        },
        {
            "name": "GetImmunity",
            "group": "UserManager",
            "description": "Get the immunity level of a user.",
            "funcName": "GetImmunity",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                }
            ],
            "retType": {
                "type": "int32",
                "description": "Immunity value, or 0 if user does not exist."
            }
        },
        {
            "name": "AddPermission",
            "group": "UserManager",
            "description": "Add a permission to a user.",
            "funcName": "AddPermission",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "perm",
                    "type": "string",
                    "ref": false,
                    "description": "Permission line."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if successful, false if user does not exist."
            }
        },
        {
            "name": "RemovePermission",
            "group": "UserManager",
            "description": "Remove a permission from a user.",
            "funcName": "RemovePermission",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "perm",
                    "type": "string",
                    "ref": false,
                    "description": "Permission line."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if successful, false if user does not exist."
            }
        },
        {
            "name": "AddGroup",
            "group": "UserManager",
            "description": "Add a group to a user.",
            "funcName": "AddGroup",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "group",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if group added, false if user/group does not exist or user is already a member."
            }
        },
        {
            "name": "RemoveGroup",
            "group": "UserManager",
            "description": "Remove a group from a user.",
            "funcName": "RemoveGroup",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "group",
                    "type": "string",
                    "ref": false,
                    "description": "Group name."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if group removed, false if user/group does not exist."
            }
        },
        {
            "name": "GetCookie",
            "group": "UserManager",
            "description": "Get a cookie value for a user.",
            "funcName": "GetCookie",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Cookie name."
                }
            ],
            "retType": {
                "type": "any",
                "description": "Cookie value, or invalid if user/cookie does not exist."
            }
        },
        {
            "name": "SetCookie",
            "group": "UserManager",
            "description": "Set a cookie value for a user.",
            "funcName": "SetCookie",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "name",
                    "type": "string",
                    "ref": false,
                    "description": "Cookie name."
                },
                {
                    "name": "cookie",
                    "type": "any",
                    "ref": true,
                    "description": "Cookie value."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if successful, false if user does not exist."
            }
        },
        {
            "name": "CreateUser",
            "group": "UserManager",
            "description": "Create a new user.",
            "funcName": "CreateUser",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                },
                {
                    "name": "immunity",
                    "type": "int32",
                    "ref": false,
                    "description": "User immunity."
                },
                {
                    "name": "lgroups",
                    "type": "ptr64",
                    "ref": false,
                    "description": "Array of groups to inherit."
                },
                {
                    "name": "perms",
                    "type": "ptr64",
                    "ref": false,
                    "description": "Array of permissions."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if created, false if user already exists."
            }
        },
        {
            "name": "DeleteUser",
            "group": "UserManager",
            "description": "Delete a user.",
            "funcName": "DeleteUser",
            "paramTypes": [
                {
                    "name": "id",
                    "type": "uint64",
                    "ref": false,
                    "description": "Player ID."
                }
            ],
            "retType": {
                "type": "bool",
                "description": "true if deleted, false if user does not exist."
            }
        }
    ]
}
